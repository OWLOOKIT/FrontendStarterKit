{"version":3,"sources":["plugins/autoHideLabels.js","plugins/externalLinks.js","site.js"],"names":[],"mappings":"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","file":"scripts.js","sourcesContent":["/**\n * Enables form labels to be overlaid on the inputs\n * Fades them out when the input is selected, and hides\n * when the user begins to type.\n */\n(($) => {\n    $.fn.autoHideLabels = function autoHideLabels(options) {\n        const settings = {\n            label: 'label',\n            input: 'textarea, input:not([type=\"checkbox\"], [type=\"radio\"], [type=\"button\"], [type=\"submit\"], [type=\"reset\"], [type=\"file\"], [type=\"hidden\"])'\n        };\n\n        if (options) {\n            $.extend(settings, options);\n        }\n\n        return $(this).each(function attachHandlers() {\n            const $this = $(this);\n\n            $this.on('focusin', () => {\n                if ($this.find(settings.input).val() === '') {\n                    $this.find(settings.label).fadeTo(100, 0.4);\n                }\n            });\n\n            $this.on('focusout', () => {\n                if ($this.find(settings.input).val() === '') {\n                    $this.find(settings.label).fadeTo(100, 1);\n                }\n            });\n\n            $this.on('input keyup', () => {\n                if ($this.find(settings.input).val() === '') {\n                    $this.find(settings.label).fadeTo(100, 0.4);\n                } else {\n                    $this.find(settings.label).fadeOut(100);\n                }\n            });\n\n            if ($this.find(settings.input).val() !== '') {\n                $this.find(settings.label).hide();\n            }\n        });\n    };\n}(jQuery));\n","/*\n * Open links to a different domain in a new window\n */\n((document, window) => {\n    const externalTest = new RegExp('/' + window.location.host + '/');\n    const links = document.getElementsByTagName('a');\n    const length = links.length;\n\n    for (let i = 0; i < length; i++) {\n        if (!externalTest.test(links[i].href)) {\n            links[i].target = '_blank';\n        }\n    }\n}(document, window));\n","(($, document) => {\n    const site = {\n        init() {\n            // Run jQuery plugins\n            $('.inplace').autoHideLabels();\n        }\n    };\n\n    // Start things off\n    site.init();\n}(jQuery, document));\n"],"sourceRoot":"/source/"}