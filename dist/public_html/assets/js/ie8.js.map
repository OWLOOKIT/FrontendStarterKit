{"version":3,"sources":["respond.js"],"names":[],"mappings":"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","file":"ie8.js","sourcesContent":["/*! Respond.js v1.4.0: min/max-width media query polyfill. (c) Scott Jehl. MIT Lic. j.mp/respondjs  */\n(function( w ){\n\n\t\"use strict\";\n\n\t//exposed namespace\n\tvar respond = {};\n\tw.respond = respond;\n\n\t//define update even in native-mq-supporting browsers, to avoid errors\n\trespond.update = function(){};\n\n\t//define ajax obj\n\tvar requestQueue = [],\n\t\txmlHttp = (function() {\n\t\t\tvar xmlhttpmethod = false;\n\t\t\ttry {\n\t\t\t\txmlhttpmethod = new w.XMLHttpRequest();\n\t\t\t}\n\t\t\tcatch( e ){\n\t\t\t\txmlhttpmethod = new w.ActiveXObject( \"Microsoft.XMLHTTP\" );\n\t\t\t}\n\t\t\treturn function(){\n\t\t\t\treturn xmlhttpmethod;\n\t\t\t};\n\t\t})(),\n\n\t\t//tweaked Ajax functions from Quirksmode\n\t\tajax = function( url, callback ) {\n\t\t\tvar req = xmlHttp();\n\t\t\tif (!req){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treq.open( \"GET\", url, true );\n\t\t\treq.onreadystatechange = function () {\n\t\t\t\tif ( req.readyState !== 4 || req.status !== 200 && req.status !== 304 ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcallback( req.responseText );\n\t\t\t};\n\t\t\tif ( req.readyState === 4 ){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treq.send( null );\n\t\t};\n\n\t//expose for testing\n\trespond.ajax = ajax;\n\trespond.queue = requestQueue;\n\n\t// expose for testing\n\trespond.regex = {\n\t\tmedia: /@media[^\\{]+\\{([^\\{\\}]*\\{[^\\}\\{]*\\})+/gi,\n\t\tkeyframes: /@(?:\\-(?:o|moz|webkit)\\-)?keyframes[^\\{]+\\{(?:[^\\{\\}]*\\{[^\\}\\{]*\\})+[^\\}]*\\}/gi,\n\t\turls: /(url\\()['\"]?([^\\/\\)'\"][^:\\)'\"]+)['\"]?(\\))/g,\n\t\tfindStyles: /@media *([^\\{]+)\\{([\\S\\s]+?)$/,\n\t\tonly: /(only\\s+)?([a-zA-Z]+)\\s?/,\n\t\tminw: /\\([\\s]*min\\-width\\s*:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/,\n\t\tmaxw: /\\([\\s]*max\\-width\\s*:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/\n\t};\n\n\t//expose media query support flag for external use\n\trespond.mediaQueriesSupported = w.matchMedia && w.matchMedia( \"only all\" ) !== null && w.matchMedia( \"only all\" ).matches;\n\n\t//if media queries are supported, exit here\n\tif( respond.mediaQueriesSupported ){\n\t\treturn;\n\t}\n\n\t//define vars\n\tvar doc = w.document,\n\t\tdocElem = doc.documentElement,\n\t\tmediastyles = [],\n\t\trules = [],\n\t\tappendedEls = [],\n\t\tparsedSheets = {},\n\t\tresizeThrottle = 30,\n\t\thead = doc.getElementsByTagName( \"head\" )[0] || docElem,\n\t\tbase = doc.getElementsByTagName( \"base\" )[0],\n\t\tlinks = head.getElementsByTagName( \"link\" ),\n\n\t\tlastCall,\n\t\tresizeDefer,\n\n\t\t//cached container for 1em value, populated the first time it's needed\n\t\teminpx,\n\n\t\t// returns the value of 1em in pixels\n\t\tgetEmValue = function() {\n\t\t\tvar ret,\n\t\t\t\tdiv = doc.createElement('div'),\n\t\t\t\tbody = doc.body,\n\t\t\t\toriginalHTMLFontSize = docElem.style.fontSize,\n\t\t\t\toriginalBodyFontSize = body && body.style.fontSize,\n\t\t\t\tfakeUsed = false;\n\n\t\t\tdiv.style.cssText = \"position:absolute;font-size:1em;width:1em\";\n\n\t\t\tif( !body ){\n\t\t\t\tbody = fakeUsed = doc.createElement( \"body\" );\n\t\t\t\tbody.style.background = \"none\";\n\t\t\t}\n\n\t\t\t// 1em in a media query is the value of the default font size of the browser\n\t\t\t// reset docElem and body to ensure the correct value is returned\n\t\t\tdocElem.style.fontSize = \"100%\";\n\t\t\tbody.style.fontSize = \"100%\";\n\n\t\t\tbody.appendChild( div );\n\n\t\t\tif( fakeUsed ){\n\t\t\t\tdocElem.insertBefore( body, docElem.firstChild );\n\t\t\t}\n\n\t\t\tret = div.offsetWidth;\n\n\t\t\tif( fakeUsed ){\n\t\t\t\tdocElem.removeChild( body );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbody.removeChild( div );\n\t\t\t}\n\n\t\t\t// restore the original values\n\t\t\tdocElem.style.fontSize = originalHTMLFontSize;\n\t\t\tif( originalBodyFontSize ) {\n\t\t\t\tbody.style.fontSize = originalBodyFontSize;\n\t\t\t}\n\n\n\t\t\t//also update eminpx before returning\n\t\t\tret = eminpx = parseFloat(ret);\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t//enable/disable styles\n\t\tapplyMedia = function( fromResize ){\n\t\t\tvar name = \"clientWidth\",\n\t\t\t\tdocElemProp = docElem[ name ],\n\t\t\t\tcurrWidth = doc.compatMode === \"CSS1Compat\" && docElemProp || doc.body[ name ] || docElemProp,\n\t\t\t\tstyleBlocks\t= {},\n\t\t\t\tlastLink = links[ links.length-1 ],\n\t\t\t\tnow = (new Date()).getTime();\n\n\t\t\t//throttle resize calls\n\t\t\tif( fromResize && lastCall && now - lastCall < resizeThrottle ){\n\t\t\t\tw.clearTimeout( resizeDefer );\n\t\t\t\tresizeDefer = w.setTimeout( applyMedia, resizeThrottle );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlastCall = now;\n\t\t\t}\n\n\t\t\tfor( var i in mediastyles ){\n\t\t\t\tif( mediastyles.hasOwnProperty( i ) ){\n\t\t\t\t\tvar thisstyle = mediastyles[ i ],\n\t\t\t\t\t\tmin = thisstyle.minw,\n\t\t\t\t\t\tmax = thisstyle.maxw,\n\t\t\t\t\t\tminnull = min === null,\n\t\t\t\t\t\tmaxnull = max === null,\n\t\t\t\t\t\tem = \"em\";\n\n\t\t\t\t\tif( !!min ){\n\t\t\t\t\t\tmin = parseFloat( min ) * ( min.indexOf( em ) > -1 ? ( eminpx || getEmValue() ) : 1 );\n\t\t\t\t\t}\n\t\t\t\t\tif( !!max ){\n\t\t\t\t\t\tmax = parseFloat( max ) * ( max.indexOf( em ) > -1 ? ( eminpx || getEmValue() ) : 1 );\n\t\t\t\t\t}\n\n\t\t\t\t\t// if there's no media query at all (the () part), or min or max is not null, and if either is present, they're true\n\t\t\t\t\tif( !thisstyle.hasquery || ( !minnull || !maxnull ) && ( minnull || currWidth >= min ) && ( maxnull || currWidth <= max ) ){\n\t\t\t\t\t\tif( !styleBlocks[ thisstyle.media ] ){\n\t\t\t\t\t\t\tstyleBlocks[ thisstyle.media ] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyleBlocks[ thisstyle.media ].push( rules[ thisstyle.rules ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//remove any existing respond style element(s)\n\t\t\tfor( var j in appendedEls ){\n\t\t\t\tif( appendedEls.hasOwnProperty( j ) ){\n\t\t\t\t\tif( appendedEls[ j ] && appendedEls[ j ].parentNode === head ){\n\t\t\t\t\t\thead.removeChild( appendedEls[ j ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tappendedEls.length = 0;\n\n\t\t\t//inject active styles, grouped by media type\n\t\t\tfor( var k in styleBlocks ){\n\t\t\t\tif( styleBlocks.hasOwnProperty( k ) ){\n\t\t\t\t\tvar ss = doc.createElement( \"style\" ),\n\t\t\t\t\t\tcss = styleBlocks[ k ].join( \"\\n\" );\n\n\t\t\t\t\tss.type = \"text/css\";\n\t\t\t\t\tss.media = k;\n\n\t\t\t\t\t//originally, ss was appended to a documentFragment and sheets were appended in bulk.\n\t\t\t\t\t//this caused crashes in IE in a number of circumstances, such as when the HTML element had a bg image set, so appending beforehand seems best. Thanks to @dvelyk for the initial research on this one!\n\t\t\t\t\thead.insertBefore( ss, lastLink.nextSibling );\n\n\t\t\t\t\tif ( ss.styleSheet ){\n\t\t\t\t\t\tss.styleSheet.cssText = css;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tss.appendChild( doc.createTextNode( css ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t//push to appendedEls to track for later removal\n\t\t\t\t\tappendedEls.push( ss );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t//find media blocks in css text, convert to style blocks\n\t\ttranslate = function( styles, href, media ){\n\t\t\tvar qs = styles.replace( respond.regex.keyframes, '' ).match( respond.regex.media ),\n\t\t\t\tql = qs && qs.length || 0;\n\n\t\t\t//try to get CSS path\n\t\t\thref = href.substring( 0, href.lastIndexOf( \"/\" ) );\n\n\t\t\tvar repUrls = function( css ){\n\t\t\t\t\treturn css.replace( respond.regex.urls, \"$1\" + href + \"$2$3\" );\n\t\t\t\t},\n\t\t\t\tuseMedia = !ql && media;\n\n\t\t\t//if path exists, tack on trailing slash\n\t\t\tif( href.length ){ href += \"/\"; }\n\n\t\t\t//if no internal queries exist, but media attr does, use that\n\t\t\t//note: this currently lacks support for situations where a media attr is specified on a link AND\n\t\t\t\t//its associated stylesheet has internal CSS media queries.\n\t\t\t\t//In those cases, the media attribute will currently be ignored.\n\t\t\tif( useMedia ){\n\t\t\t\tql = 1;\n\t\t\t}\n\n\t\t\tfor( var i = 0; i < ql; i++ ){\n\t\t\t\tvar fullq, thisq, eachq, eql;\n\n\t\t\t\t//media attr\n\t\t\t\tif( useMedia ){\n\t\t\t\t\tfullq = media;\n\t\t\t\t\trules.push( repUrls( styles ) );\n\t\t\t\t}\n\t\t\t\t//parse for styles\n\t\t\t\telse{\n\t\t\t\t\tfullq = qs[ i ].match( respond.regex.findStyles ) && RegExp.$1;\n\t\t\t\t\trules.push( RegExp.$2 && repUrls( RegExp.$2 ) );\n\t\t\t\t}\n\n\t\t\t\teachq = fullq.split( \",\" );\n\t\t\t\teql = eachq.length;\n\n\t\t\t\tfor( var j = 0; j < eql; j++ ){\n\t\t\t\t\tthisq = eachq[ j ];\n\t\t\t\t\tmediastyles.push( {\n\t\t\t\t\t\tmedia : thisq.split( \"(\" )[ 0 ].match( respond.regex.only ) && RegExp.$2 || \"all\",\n\t\t\t\t\t\trules : rules.length - 1,\n\t\t\t\t\t\thasquery : thisq.indexOf(\"(\") > -1,\n\t\t\t\t\t\tminw : thisq.match( respond.regex.minw ) && parseFloat( RegExp.$1 ) + ( RegExp.$2 || \"\" ),\n\t\t\t\t\t\tmaxw : thisq.match( respond.regex.maxw ) && parseFloat( RegExp.$1 ) + ( RegExp.$2 || \"\" )\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tapplyMedia();\n\t\t},\n\n\t\t//recurse through request queue, get css text\n\t\tmakeRequests = function(){\n\t\t\tif( requestQueue.length ){\n\t\t\t\tvar thisRequest = requestQueue.shift();\n\n\t\t\t\tajax( thisRequest.href, function( styles ){\n\t\t\t\t\ttranslate( styles, thisRequest.href, thisRequest.media );\n\t\t\t\t\tparsedSheets[ thisRequest.href ] = true;\n\n\t\t\t\t\t// by wrapping recursive function call in setTimeout\n\t\t\t\t\t// we prevent \"Stack overflow\" error in IE7\n\t\t\t\t\tw.setTimeout(function(){ makeRequests(); },0);\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\t//loop stylesheets, send text content to translate\n\t\tripCSS = function(){\n\n\t\t\tfor( var i = 0; i < links.length; i++ ){\n\t\t\t\tvar sheet = links[ i ],\n\t\t\t\thref = sheet.href,\n\t\t\t\tmedia = sheet.media,\n\t\t\t\tisCSS = sheet.rel && sheet.rel.toLowerCase() === \"stylesheet\";\n\n\t\t\t\t//only links plz and prevent re-parsing\n\t\t\t\tif( !!href && isCSS && !parsedSheets[ href ] ){\n\t\t\t\t\t// selectivizr exposes css through the rawCssText expando\n\t\t\t\t\tif (sheet.styleSheet && sheet.styleSheet.rawCssText) {\n\t\t\t\t\t\ttranslate( sheet.styleSheet.rawCssText, href, media );\n\t\t\t\t\t\tparsedSheets[ href ] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( (!/^([a-zA-Z:]*\\/\\/)/.test( href ) && !base) ||\n\t\t\t\t\t\t\thref.replace( RegExp.$1, \"\" ).split( \"/\" )[0] === w.location.host ){\n\t\t\t\t\t\t\t// IE7 doesn't handle urls that start with '//' for ajax request\n\t\t\t\t\t\t\t// manually add in the protocol\n\t\t\t\t\t\t\tif ( href.substring(0,2) === \"//\" ) { href = w.location.protocol + href; }\n\t\t\t\t\t\t\trequestQueue.push( {\n\t\t\t\t\t\t\t\thref: href,\n\t\t\t\t\t\t\t\tmedia: media\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tmakeRequests();\n\t\t};\n\n\t//translate CSS\n\tripCSS();\n\n\t//expose update for re-running respond later on\n\trespond.update = ripCSS;\n\n\t//expose getEmValue\n\trespond.getEmValue = getEmValue;\n\n\t//adjust on resize\n\tfunction callMedia(){\n\t\tapplyMedia( true );\n\t}\n\n\tif( w.addEventListener ){\n\t\tw.addEventListener( \"resize\", callMedia, false );\n\t}\n\telse if( w.attachEvent ){\n\t\tw.attachEvent( \"onresize\", callMedia );\n\t}\n})(this);\n"],"sourceRoot":"/source/"}