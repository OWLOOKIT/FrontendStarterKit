{"version":3,"sources":["respond.src.js"],"names":[],"mappings":"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","file":"ie8.js","sourcesContent":["/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */\n/*! NOTE: If you're already including a window.matchMedia polyfill via Modernizr or otherwise, you don't need this part */\n(function(w) {\n  \"use strict\";\n  w.matchMedia = w.matchMedia || function(doc, undefined) {\n    var bool, docElem = doc.documentElement, refNode = docElem.firstElementChild || docElem.firstChild, fakeBody = doc.createElement(\"body\"), div = doc.createElement(\"div\");\n    div.id = \"mq-test-1\";\n    div.style.cssText = \"position:absolute;top:-100em\";\n    fakeBody.style.background = \"none\";\n    fakeBody.appendChild(div);\n    return function(q) {\n      div.innerHTML = '&shy;<style media=\"' + q + '\"> #mq-test-1 { width: 42px; }</style>';\n      docElem.insertBefore(fakeBody, refNode);\n      bool = div.offsetWidth === 42;\n      docElem.removeChild(fakeBody);\n      return {\n        matches: bool,\n        media: q\n      };\n    };\n  }(w.document);\n})(this);\n\n/*! Respond.js v1.4.0: min/max-width media query polyfill. (c) Scott Jehl. MIT Lic. j.mp/respondjs  */\n(function(w) {\n  \"use strict\";\n  var respond = {};\n  w.respond = respond;\n  respond.update = function() {};\n  var requestQueue = [], xmlHttp = function() {\n    var xmlhttpmethod = false;\n    try {\n      xmlhttpmethod = new w.XMLHttpRequest();\n    } catch (e) {\n      xmlhttpmethod = new w.ActiveXObject(\"Microsoft.XMLHTTP\");\n    }\n    return function() {\n      return xmlhttpmethod;\n    };\n  }(), ajax = function(url, callback) {\n    var req = xmlHttp();\n    if (!req) {\n      return;\n    }\n    req.open(\"GET\", url, true);\n    req.onreadystatechange = function() {\n      if (req.readyState !== 4 || req.status !== 200 && req.status !== 304) {\n        return;\n      }\n      callback(req.responseText);\n    };\n    if (req.readyState === 4) {\n      return;\n    }\n    req.send(null);\n  };\n  respond.ajax = ajax;\n  respond.queue = requestQueue;\n  respond.regex = {\n    media: /@media[^\\{]+\\{([^\\{\\}]*\\{[^\\}\\{]*\\})+/gi,\n    keyframes: /@(?:\\-(?:o|moz|webkit)\\-)?keyframes[^\\{]+\\{(?:[^\\{\\}]*\\{[^\\}\\{]*\\})+[^\\}]*\\}/gi,\n    urls: /(url\\()['\"]?([^\\/\\)'\"][^:\\)'\"]+)['\"]?(\\))/g,\n    findStyles: /@media *([^\\{]+)\\{([\\S\\s]+?)$/,\n    only: /(only\\s+)?([a-zA-Z]+)\\s?/,\n    minw: /\\([\\s]*min\\-width\\s*:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/,\n    maxw: /\\([\\s]*max\\-width\\s*:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/\n  };\n  respond.mediaQueriesSupported = w.matchMedia && w.matchMedia(\"only all\") !== null && w.matchMedia(\"only all\").matches;\n  if (respond.mediaQueriesSupported) {\n    return;\n  }\n  var doc = w.document, docElem = doc.documentElement, mediastyles = [], rules = [], appendedEls = [], parsedSheets = {}, resizeThrottle = 30, head = doc.getElementsByTagName(\"head\")[0] || docElem, base = doc.getElementsByTagName(\"base\")[0], links = head.getElementsByTagName(\"link\"), lastCall, resizeDefer, eminpx, getEmValue = function() {\n    var ret, div = doc.createElement(\"div\"), body = doc.body, originalHTMLFontSize = docElem.style.fontSize, originalBodyFontSize = body && body.style.fontSize, fakeUsed = false;\n    div.style.cssText = \"position:absolute;font-size:1em;width:1em\";\n    if (!body) {\n      body = fakeUsed = doc.createElement(\"body\");\n      body.style.background = \"none\";\n    }\n    docElem.style.fontSize = \"100%\";\n    body.style.fontSize = \"100%\";\n    body.appendChild(div);\n    if (fakeUsed) {\n      docElem.insertBefore(body, docElem.firstChild);\n    }\n    ret = div.offsetWidth;\n    if (fakeUsed) {\n      docElem.removeChild(body);\n    } else {\n      body.removeChild(div);\n    }\n    docElem.style.fontSize = originalHTMLFontSize;\n    if (originalBodyFontSize) {\n      body.style.fontSize = originalBodyFontSize;\n    }\n    ret = eminpx = parseFloat(ret);\n    return ret;\n  }, applyMedia = function(fromResize) {\n    var name = \"clientWidth\", docElemProp = docElem[name], currWidth = doc.compatMode === \"CSS1Compat\" && docElemProp || doc.body[name] || docElemProp, styleBlocks = {}, lastLink = links[links.length - 1], now = new Date().getTime();\n    if (fromResize && lastCall && now - lastCall < resizeThrottle) {\n      w.clearTimeout(resizeDefer);\n      resizeDefer = w.setTimeout(applyMedia, resizeThrottle);\n      return;\n    } else {\n      lastCall = now;\n    }\n    for (var i in mediastyles) {\n      if (mediastyles.hasOwnProperty(i)) {\n        var thisstyle = mediastyles[i], min = thisstyle.minw, max = thisstyle.maxw, minnull = min === null, maxnull = max === null, em = \"em\";\n        if (!!min) {\n          min = parseFloat(min) * (min.indexOf(em) > -1 ? eminpx || getEmValue() : 1);\n        }\n        if (!!max) {\n          max = parseFloat(max) * (max.indexOf(em) > -1 ? eminpx || getEmValue() : 1);\n        }\n        if (!thisstyle.hasquery || (!minnull || !maxnull) && (minnull || currWidth >= min) && (maxnull || currWidth <= max)) {\n          if (!styleBlocks[thisstyle.media]) {\n            styleBlocks[thisstyle.media] = [];\n          }\n          styleBlocks[thisstyle.media].push(rules[thisstyle.rules]);\n        }\n      }\n    }\n    for (var j in appendedEls) {\n      if (appendedEls.hasOwnProperty(j)) {\n        if (appendedEls[j] && appendedEls[j].parentNode === head) {\n          head.removeChild(appendedEls[j]);\n        }\n      }\n    }\n    appendedEls.length = 0;\n    for (var k in styleBlocks) {\n      if (styleBlocks.hasOwnProperty(k)) {\n        var ss = doc.createElement(\"style\"), css = styleBlocks[k].join(\"\\n\");\n        ss.type = \"text/css\";\n        ss.media = k;\n        head.insertBefore(ss, lastLink.nextSibling);\n        if (ss.styleSheet) {\n          ss.styleSheet.cssText = css;\n        } else {\n          ss.appendChild(doc.createTextNode(css));\n        }\n        appendedEls.push(ss);\n      }\n    }\n  }, translate = function(styles, href, media) {\n    var qs = styles.replace(respond.regex.keyframes, \"\").match(respond.regex.media), ql = qs && qs.length || 0;\n    href = href.substring(0, href.lastIndexOf(\"/\"));\n    var repUrls = function(css) {\n      return css.replace(respond.regex.urls, \"$1\" + href + \"$2$3\");\n    }, useMedia = !ql && media;\n    if (href.length) {\n      href += \"/\";\n    }\n    if (useMedia) {\n      ql = 1;\n    }\n    for (var i = 0; i < ql; i++) {\n      var fullq, thisq, eachq, eql;\n      if (useMedia) {\n        fullq = media;\n        rules.push(repUrls(styles));\n      } else {\n        fullq = qs[i].match(respond.regex.findStyles) && RegExp.$1;\n        rules.push(RegExp.$2 && repUrls(RegExp.$2));\n      }\n      eachq = fullq.split(\",\");\n      eql = eachq.length;\n      for (var j = 0; j < eql; j++) {\n        thisq = eachq[j];\n        mediastyles.push({\n          media: thisq.split(\"(\")[0].match(respond.regex.only) && RegExp.$2 || \"all\",\n          rules: rules.length - 1,\n          hasquery: thisq.indexOf(\"(\") > -1,\n          minw: thisq.match(respond.regex.minw) && parseFloat(RegExp.$1) + (RegExp.$2 || \"\"),\n          maxw: thisq.match(respond.regex.maxw) && parseFloat(RegExp.$1) + (RegExp.$2 || \"\")\n        });\n      }\n    }\n    applyMedia();\n  }, makeRequests = function() {\n    if (requestQueue.length) {\n      var thisRequest = requestQueue.shift();\n      ajax(thisRequest.href, function(styles) {\n        translate(styles, thisRequest.href, thisRequest.media);\n        parsedSheets[thisRequest.href] = true;\n        w.setTimeout(function() {\n          makeRequests();\n        }, 0);\n      });\n    }\n  }, ripCSS = function() {\n    for (var i = 0; i < links.length; i++) {\n      var sheet = links[i], href = sheet.href, media = sheet.media, isCSS = sheet.rel && sheet.rel.toLowerCase() === \"stylesheet\";\n      if (!!href && isCSS && !parsedSheets[href]) {\n        if (sheet.styleSheet && sheet.styleSheet.rawCssText) {\n          translate(sheet.styleSheet.rawCssText, href, media);\n          parsedSheets[href] = true;\n        } else {\n          if (!/^([a-zA-Z:]*\\/\\/)/.test(href) && !base || href.replace(RegExp.$1, \"\").split(\"/\")[0] === w.location.host) {\n            if (href.substring(0, 2) === \"//\") {\n              href = w.location.protocol + href;\n            }\n            requestQueue.push({\n              href: href,\n              media: media\n            });\n          }\n        }\n      }\n    }\n    makeRequests();\n  };\n  ripCSS();\n  respond.update = ripCSS;\n  respond.getEmValue = getEmValue;\n  function callMedia() {\n    applyMedia(true);\n  }\n  if (w.addEventListener) {\n    w.addEventListener(\"resize\", callMedia, false);\n  } else if (w.attachEvent) {\n    w.attachEvent(\"onresize\", callMedia);\n  }\n})(this);"],"sourceRoot":"/source/"}