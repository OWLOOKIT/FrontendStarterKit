// Forms
// =====

// Mixin for form field states
@mixin formFieldState($textColor: #555, $borderColor: #ccc, $backgroundColor: #f5f5f5) {
    // Set the text color
    .control-label,
    .help-block,
    .help-inline {
        color: $textColor;
    }
    // Style inputs accordingly
    .checkbox,
    .radio,
    input,
    select,
    textarea {
        color: $textColor;
    }
    input,
    select,
    textarea {
        border-color: $borderColor;
        @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work
        &:focus {
            border-color: darken($borderColor, 10%);
            @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten($borderColor, 20%));
        }
    }
}

// Form controls
// -------------

// Shared size and type resets
select,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"] {
    @include appearance(none);
    display: inline-block;
    height: lines(1.25);
    line-height: lines(1.25, 2);
    width: 100%;
    padding: 0 gutters(0.5);
    font-family: $text-face;
    font-style: italic;
    vertical-align: middle;
    color: $text-color;
    background: lighten($light-color, 5%);
    border: $rule;
    border-radius: 0;
    transition: box-shadow 0.2s;

    // Focus state
    &:focus {
        outline: 0;
        border-color: $medium-color;
    }
}

// Reset height since textareas have rows
textarea {
    height: auto;
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
    margin: 4px 0 0;
    *margin-top: 0; /* IE7 */
    margin-top: 1px \9; /* IE8-9 */
    line-height: normal;
}

// Reset width of input images, buttons, radios, checkboxes
input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="radio"],
input[type="checkbox"] {
    width: auto; // Override of generic input selector
}

// Fix  padding in Webkit
input[type="search"] {
    padding-right: 0;
}
input[type="search"]::-webkit-search-decoration {
    display: none;
}

select,
select[size="0"],
select[size="1"] {
    height: lines(1.25);
    padding-right: 0;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
    height: auto;
}

.select-wrapper {
    position: relative;
    overflow: hidden;
    background: $background;

    &:after {
        content: "<>";
        position: absolute;
        display: block;
        height: 20px;
        width: lines(1.25, 1);
        right: -1px;
        top: 3px;
        font: bold 12px/20px "Consolas", monospace;
        text-align: center;
        color: $background;
        background: $medium-color;
        transform: rotate(90deg);
        pointer-events: none;
    }
}


// Placeholder
// -------------------------

// Placeholder text gets special styles because when browsers invalidate entire lines if it doesn't understand a selector
input,
textarea {
    &::placeholder {
        color: $medium-color;
    }
}


// CHECKBOXES & RADIOS
// -------------------

// Indent the labels to position radios/checkboxes as hanging
.radio,
.checkbox {
    min-height: lines(); // clear the floating input if there is no label text
    padding-left: 20px;
}
.radio input[type="radio"],
.checkbox input[type="checkbox"] {
    float: left;
    margin-left: -20px;
}

// Move the options list down to align with labels
.controls > .radio:first-child,
.controls > .checkbox:first-child {
    padding-top: 5px; // has to be padding because margin collaspes
}

// Radios and checkboxes on same line
.radio.inline,
.checkbox.inline {
    display: inline-block;
    padding-top: 5px;
    margin-bottom: 0;
    vertical-align: middle;
}
.radio.inline + .radio.inline,
.checkbox.inline + .checkbox.inline {
    margin-left: 10px; // space out consecutive inline controls
}


// DISABLED STATE
// --------------

// Disabled and read-only inputs
input[disabled],
select[disabled],
textarea[disabled],
input[readonly],
select[readonly],
textarea[readonly] {
    cursor: not-allowed;
    background-color: darken($background, 5%);
}
// Explicitly reset the colors here
input[type="radio"][disabled],
input[type="checkbox"][disabled],
input[type="radio"][readonly],
input[type="checkbox"][readonly] {
    background-color: transparent;
}


// HTML5 invalid states
// Shares styles with the .control-group.error above
input:focus:invalid,
textarea:focus:invalid,
select:focus:invalid {
    color: #b94a48;
    border-color: #ee5f5b;
    &:focus {
        border-color: darken(#ee5f5b, 10%);
        @include box-shadow(0 0 6px lighten(#ee5f5b, 20%));
    }
}